# POM = page object model 
## 
### the code with pom and without

package test;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import pages.GoogleSearchPage;

public class GoogleTest1 {

	private static WebDriver driver = null;

			public static void main(String[] args) {
		googleSearch();

	}
	public static void googleSearch() {

		System.setProperty("webdriver.chrome.driver", "C:\\Selenium\\chromedriver.exe");
		driver = new ChromeDriver(); 

		//go to google.com

		driver.get("https://google.com");

		//enter text in search textbox

		//driver.findElement(By.name("q")).sendKeys("automation");
		//POM vs nonPOM
		GoogleSearchPage.textbox_search(driver).sendKeys("automation");

		//click on search button
		//in this case the button is hidden after writing in searchbox so ill hit enter adter the search

		//driver.findElement(By.name("btnK")).click();
		//driver.findElement(By.name("btnK")).sendKeys(Keys.RETURN);
		//POM vs nonPOM
		GoogleSearchPage.button_search(driver).sendKeys(Keys.RETURN);

		//close browser
		driver.close();

		System.out.println("test done");
	}
}

## the page code 

package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

public class GoogleSearchPage {

	private static WebElement element = null;


	public static WebElement textbox_search(WebDriver driver) {

		element = driver.findElement(By.name("q"));
		return element;

	}

	public static WebElement button_search(WebDriver driver) {

		element = driver.findElement(By.name("btnK"));
		return element;

	}

}
