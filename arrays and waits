package com.linux.foundations;

import java.util.Arrays;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class MoreTests {


	public static void main(String[] args) throws InterruptedException {
		System.setProperty("webdriver.chrome.driver", "C:\\Selenium\\chromedriver.exe");
		WebDriver driver = new ChromeDriver();
		
		WebDriverWait w = new WebDriverWait(driver,5);  // <-- Explicit wait (for specific elements!) (faster but more code )
		////////Implicit vs Explicit - useage should be discussed .depened on website nature.
		//driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);  // <-- Implicit wait (for the lines of code) (slower but less code )

		String[] itemsNeeded = {"Cucumber", "Carrot", "Beetroot", "Tomato", "Brocolli"};  //<-- array

		driver.get("https://rahulshettyacademy.com/seleniumPractise/#/");



		addItems(driver, itemsNeeded); //<--called it from the addItems block (below)

		driver.findElement(By.cssSelector("img[alt='Cart']")).click();
		driver.findElement(By.xpath("//button[contains(text(),'PROCEED TO CHECKOUT')]")).click();

		w.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input.promoCode")));
		driver.findElement(By.cssSelector("input.promoCode")).sendKeys("rahulshettyacademy");
		driver.findElement(By.cssSelector("button.promoBtn")).click();

		w.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("span.promoInfo")));
		System.out.println(driver.findElement(By.cssSelector("span.promoInfo")).getText());




	}

	private static By cssSelector(String string) {
		// TODO Auto-generated method stub
		return null;
	}

	public static void addItems(WebDriver driver, String[] itemsNeeded )
	{

		List<WebElement> products=driver.findElements(By.cssSelector("h4.product-name"));

		for(int i=0;i<products.size();i++)
		{
			String[] name=products.get(i).getText().split("-");
			String formatedName= name[0].trim();


			List itemsNeededList = Arrays.asList(itemsNeeded);


			int j=0;
			if(itemsNeededList.contains(formatedName))
			{
				j++;
				//click Add to cart
				//below the element used before was text. in that case the text button change the text when hovering it.
				//so its recommanded to not use elements bases on texts.
				driver.findElements(By.xpath("//div[@class='product-action']")).get(i).click();

				if(j==itemsNeeded.length)
					break;
			}
		}

	}
}
